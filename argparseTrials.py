import argparse
parser = argparse.ArgumentParser()
parser.add_argument('piece', help="If the CMN-MEI file of the piece is in the same directory as the MEI_Translator module, just enter the 'name' of the piece (including its extension: '.mei'). If not, put the whole 'path' of the piece.")
parser.add_argument('which_ars', choices=['ArsNova', 'ArsAntiqua'], help="If you select 'ArsNova' you have to use the optional argument '--newvoice_nova' to add the mensuration (values for: modusmajor, modusminor, tempus and prolatio) for each voice. If you choose 'ArsAntiqua' you have to use the optional argument '--newvoice_antiqua' to add the mensuration (values for: breve and modusminor) for each voice.")
parser.add_argument('--newvoice_nova', nargs=4, action='append', choices=['p', 'i'], default=[], help="Use this flag for each new voice (in Ars Nova) that you are entering. After the flag, use 'p' or 'i' to indicate the mensuration (in the order: modusmajor + modusminor + tempus + prolatio). The order in which you enter the mensuration of the voices here should be the same as the order of the voices in the CMN-MEI file. \nExample for an Ars Nova 3-voice motet with different mensurations for each voice: --newvoice_nova i i p p --newvoice_nova i p i p --newvoice_nova p i i i") # for now, just 4 values per voice are allowed
parser.add_argument('--newvoice_antiqua', nargs=2, action='append', choices=['3','2', 'p', 'i'], default=[], help="Use this flag for each new voice (in Ars Antiqua) that you are entering. After the flag, use '2' or '3' to indicate the 'division of the breve' (duple of triple division) and then use 'p' or 'i' to indicate the 'modusminor'. The order in which you enter the mensuration of the voices here should be the same as the order of the voices in the CMN-MEI file. \nExample for an Ars Antiqua 4-voice motet with 3 minor semibreves per breve and imperfect modus: --newvoice_antiqua 3 i --newvoice_antiqua 3 i --newvoice_antiqua 3 i --newvoice_antiqua 3 i") # for now, you have to add each voice
args = parser.parse_known_args()
print(args)